# preliminary plot
p7 <- ggplot(pd,
aes(x = treatment,
y = median_zscore,
group = cultivar)) +
geom_smooth(se = T,
size = 0.5,
color = 'grey') +
geom_point(aes(fill = treatment),
shape = 18,
size = 3,
alpha = 0.5) +
labs(x = 'Time',
y = 'Z-score',
color = 'Cultivar') +
scale_fill_manual(values = c('black', '#f1a340', 'red')) +
ylim(-2.0, 2.0) +
facet_wrap(.~name, ncol = 5) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 10, face = 'bold', angle = 40, hjust = 1),
axis.text.y = element_text(size = 10, face = 'bold'),
strip.background = element_rect(fill = alpha('#91bfdb', 0.5)),
strip.text = element_text(size = 8, face = 'bold'),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, color = 'black'))
p7
# preliminary plot
p7 <- ggplot(pd,
aes(x = treatment,
y = median_zscore,
group = cultivar)) +
geom_smooth(se = T,
size = 0.5,
color = 'grey') +
geom_point(aes(color = treatment),
shape = 1,
size = 3,
alpha = 0.5) +
labs(x = 'Time',
y = 'Z-score',
color = 'Cultivar') +
scale_color_manual(values = c('black', '#f1a340', 'red')) +
ylim(-2.0, 2.0) +
facet_wrap(.~name, ncol = 5) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 10, face = 'bold', angle = 40, hjust = 1),
axis.text.y = element_text(size = 10, face = 'bold'),
strip.background = element_rect(fill = alpha('#91bfdb', 0.5)),
strip.text = element_text(size = 8, face = 'bold'),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, color = 'black'))
p7
# preliminary plot
p7 <- ggplot(pd,
aes(x = treatment,
y = median_zscore,
group = cultivar)) +
geom_smooth(se = T,
size = 0.5,
color = 'grey') +
geom_point(aes(color = treatment),
shape = 1,
size = 3,
alpha = 0.5) +
labs(x = 'Time',
y = 'Z-score',
color = 'Treatment') +
scale_color_manual(values = c('black', '#f1a340', 'red')) +
ylim(-2.0, 2.0) +
facet_wrap(.~name, ncol = 5) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 10, face = 'bold', angle = 40, hjust = 1),
axis.text.y = element_text(size = 10, face = 'bold'),
strip.background = element_rect(fill = alpha('#91bfdb', 0.5)),
strip.text = element_text(size = 8, face = 'bold'),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, color = 'black'))
p7
pdf('cluster.pdf',
width = 6, height = 5)
p7
dev.off()
pdf('cluster.pdf',
width = 6, height = 3)
p7
dev.off()
pdf('cluster.pdf',
width = 6, height = 2)
p7
dev.off()
pdf('cluster.pdf',
width = 6, height = 1.5)
p7
dev.off()
pdf('cluster.pdf',
width = 6, height = 1.75)
p7
dev.off()
# preliminary plot
p7 <- ggplot(pd,
aes(x = treatment,
y = median_zscore,
group = cultivar)) +
geom_smooth(se = T,
size = 0.5,
color = 'grey') +
geom_point(aes(color = treatment),
shape = 1,
size = 2,
alpha = 0.5) +
labs(x = 'Time',
y = 'Z-score',
color = 'Treatment') +
scale_color_manual(values = c('black', '#f1a340', 'red')) +
ylim(-2.0, 2.0) +
facet_wrap(.~name, ncol = 5) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 10, face = 'bold', angle = 40, hjust = 1),
axis.text.y = element_text(size = 10, face = 'bold'),
strip.background = element_rect(fill = alpha('#91bfdb', 0.5)),
strip.text = element_text(size = 8, face = 'bold'),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, color = 'black'))
pdf('cluster.pdf',
width = 6, height = 1.75)
p7
dev.off()
# preliminary plot
p7 <- ggplot(pd,
aes(x = treatment,
y = median_zscore,
group = cultivar)) +
geom_smooth(se = T,
size = 0.5,
color = 'grey') +
geom_point(aes(color = cultivar),
shape = 1,
size = 2,
alpha = 0.5) +
labs(x = 'Time',
y = 'Z-score',
color = 'Cultivar') +
scale_color_manual(values = c('black', '#f1a340', 'red')) +
ylim(-2.0, 2.0) +
facet_wrap(.~name, ncol = 5) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 10, face = 'bold', angle = 40, hjust = 1),
axis.text.y = element_text(size = 10, face = 'bold'),
strip.background = element_rect(fill = alpha('#91bfdb', 0.5)),
strip.text = element_text(size = 8, face = 'bold'),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, color = 'black'))
pdf('cluster.pdf',
width = 6, height = 1.75)
p7
dev.off()
# peak location/area
Txdb_gtf <- makeTxDbFromGFF('/Users/user/Documents/ATAC-seq/marchantia/HS/dataset/MpTak_v6.1r1.gff')
head(peak_cluster)
data <- peak_cluster %>%
dplyr::select(peak) %>%
mutate(c = peak) %>%
separate(., col = 'c', into = c('Chr', 'Start', 'End'), sep = '\\.')
# peak location/area
Txdb_gtf <- makeTxDbFromGFF('Slycopersicum_796_ITAG5.0.gene.gff3')
head(peak_cluster)
data <- peak_cluster %>%
dplyr::select(peak) %>%
mutate(c = peak) %>%
separate(., col = 'c', into = c('Chr', 'Start', 'End'), sep = '\\.')
## make GRanges data
gr <- makeGRangesFromDataFrame(data, keep.extra.columns=T)
## annotate
peakAnno <- annotatePeak(gr,
tssRegion=c(-1500, 1500),
genomicAnnotationPriority = c("Exon", "Intron", "5UTR", "3UTR", "Promoter", "Downstream", "Intergenic"),
TxDb=Txdb_gtf,
level ='gene')
## export peaks annotation
## only loss 6 peaks
peakAnno
peakAnno@anno
peakAnno_tb <- as_tibble(peakAnno@anno) %>%
mutate(`distanceToTSS (log10)` = log10((abs(distanceToTSS)/1000) + 1))
peakAnno_tb[which(peakAnno_tb$`distanceToTSS (log10)` < 0),]$`distanceToTSS (log10)` <- -peakAnno_tb[which(peakAnno_tb$`distanceToTSS (log10)` < 0),]$`distanceToTSS (log10)`
# plot1
plot_data <- peakAnno_tb %>%
dplyr::select(`distanceToTSS (log10)`)
p8 <- ggplot(plot_data,
aes(x = `distanceToTSS (log10)`)) +
geom_density(linewidth = 1) +
labs(x = 'log10((Distance To TSS/1000) + 1)',
y = 'Relative density') +
geom_vline(aes(xintercept = log10(1)),
linetype = 'dashed',
color = 'black',
linewidth = 0.25) +
geom_vline(aes(xintercept = log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = 1) +
geom_vline(aes(xintercept = -log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = 1) +
geom_vline(aes(xintercept = log10(5)),
linetype = 'dashed',
color = 'black',
linewidth = 0.25) +
# geom_vline(aes(xintercept = -log10(5)),
#            linetype = 'dashed',
#            color = 'black') +
annotate('text',
label = '±1.5KB',
x = -log10(4),
y = 2,
size = 4,
color = '#E69F00') +
# annotate('text',
#          label = '+5KB',
#          x = log10(9),
#          y = 2,
#          size = 4) +
xlim(-2.5,2.5) +
theme_classic() +
scale_color_manual(values = c("#999999", "#E69F00")) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'),
panel.border = element_rect(color = 'black', linewidth = 1, fill = NA),
axis.line = element_blank())
p8
setwd(p_plot)
setwd(p_plot)
pdf('merge_cluster_peak_distribution.pdf',
width = 5, height = 3)
p8
dev.off()
p8 <- ggplot(plot_data,
aes(x = `distanceToTSS (log10)`)) +
geom_density(linewidth = 1) +
labs(x = 'log10((Distance To TSS/1000) + 1)',
y = 'Relative density') +
geom_vline(aes(xintercept = log10(1)),
linetype = 'dashed',
color = 'black',
linewidth = 0.25) +
geom_vline(aes(xintercept = log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = 1) +
geom_vline(aes(xintercept = -log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = 1) +
geom_vline(aes(xintercept = log10(5)),
linetype = 'dashed',
color = 'black',
linewidth = 0.25) +
# geom_vline(aes(xintercept = -log10(5)),
#            linetype = 'dashed',
#            color = 'black') +
annotate('text',
label = '±1.5KB',
x = -log10(4),
y = 2,
size = 4,
color = '#E69F00') +
# annotate('text',
#          label = '+5KB',
#          x = log10(9),
#          y = 2,
#          size = 4) +
xlim(-1,1) +
theme_classic() +
scale_color_manual(values = c("#999999", "#E69F00")) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'),
panel.border = element_rect(color = 'black', linewidth = 1, fill = NA),
axis.line = element_blank())
p8
pdf('merge_cluster_peak_distribution2.pdf',
width = 5, height = 3)
p8
dev.off()
p8 <- ggplot(plot_data,
aes(x = `distanceToTSS (log10)`)) +
geom_density(linewidth = 1) +
labs(x = 'log10((Distance To TSS/1000) + 1)',
y = 'Relative density') +
geom_vline(aes(xintercept = log10(1)),
linetype = 'dashed',
color = 'black',
linewidth = 0.25) +
geom_vline(aes(xintercept = log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = 1) +
geom_vline(aes(xintercept = -log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = 1) +
# geom_vline(aes(xintercept = -log10(5)),
#            linetype = 'dashed',
#            color = 'black') +
annotate('text',
label = '±1.5KB',
x = -log10(2),
y = 2,
size = 4,
color = '#E69F00') +
theme_classic() +
scale_color_manual(values = c("#999999", "#E69F00")) +
scale_x_continuous(limits = c(-log10(3), log10(3)),
breaks = c(-0.4, -0.2, 0, 0.2, 0.4),
labels = c(-0.4, -0.2, 0, 0.2, 0.4)) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'),
panel.border = element_rect(color = 'black', linewidth = 1, fill = NA),
axis.line = element_blank())
p8
pdf('merge_cluster_peak_distribution2.pdf',
width = 5, height = 3)
p8
dev.off()
# plot2
plot_data2 <- data.frame(peakAnno@annoStat)
p9 <- ggplot(plot_data2,
aes(x = Feature,
y = Frequency)) +
geom_bar(stat = 'identity',
position = 'dodge',
fill = c("#E69F00", rep("#999999",6))
) +
labs(x = 'Feature',
y = 'Percentage') +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 10, face = 'bold', angle = 40, hjust = 1),
axis.text.y = element_text(size = 10, face = 'bold'),
panel.border = element_rect(color = 'black', linewidth = 1, fill = NA),
axis.line = element_blank())
p9
setwd(p_plot)
pdf('merge_cluster_peak_distribution_ratio.pdf',
width = 3, height = 5)
p9
dev.off()
## split cluster peak location/area
peakAnno_tb <- merge(peakAnno_tb, peak_cluster)
# plot1
plot_data <- peakAnno_tb %>%
dplyr::select(`distanceToTSS (log10)`, cluster)
plot_data$cluster <- factor(plot_data$cluster, levels = paste0('C', 1:5))
p10 <- ggplot(plot_data,
aes(x = `distanceToTSS (log10)`)) +
geom_density(linewidth = 1) +
labs(x = 'log10((Distance To TSS/1000) + 1)',
y = 'Relative density') +
geom_vline(aes(xintercept = log10(1)),
linetype = 'dashed',
color = 'black',
linewidth = 0.25) +
geom_vline(aes(xintercept = log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = .8) +
geom_vline(aes(xintercept = -log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = .8) +
theme_classic() +
xlim(-2.3,2.3) +
scale_color_manual(values = c("#999999", "#E69F00")) +
facet_wrap(.~cluster, ncol = 5) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 10, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'),
strip.background = element_rect(fill = alpha('#91bfdb', 0.5)),
strip.text = element_text(size = 8, face = 'bold'),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, color = 'black'))
p10
pdf('cluster_peak_distribution.pdf',
width = 8, height = 5)
p10
dev.off()
pdf('cluster_peak_distribution.pdf',
width = 8, height = 1.75)
p10
dev.off()
p10 <- ggplot(plot_data,
aes(x = `distanceToTSS (log10)`)) +
geom_density(linewidth = 1) +
labs(x = 'log10((Distance To TSS/1000) + 1)',
y = 'Relative density') +
geom_vline(aes(xintercept = log10(1)),
linetype = 'dashed',
color = 'black',
linewidth = 0.25) +
geom_vline(aes(xintercept = log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = .8) +
geom_vline(aes(xintercept = -log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = .8) +
theme_classic() +
scale_x_continuous(limits = c(-log10(3), log10(3)),
breaks = c(-0.4, -0.2, 0, 0.2, 0.4),
labels = c(-0.4, -0.2, 0, 0.2, 0.4)) +
scale_color_manual(values = c("#999999", "#E69F00")) +
facet_wrap(.~cluster, ncol = 5) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 8, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'),
strip.background = element_rect(fill = alpha('#91bfdb', 0.5)),
strip.text = element_text(size = 8, face = 'bold'),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, color = 'black'))
p10
p10 <- ggplot(plot_data,
aes(x = `distanceToTSS (log10)`)) +
geom_density(linewidth = 1) +
labs(x = 'log10((Distance To TSS/1000) + 1)',
y = 'Relative density') +
geom_vline(aes(xintercept = log10(1)),
linetype = 'dashed',
color = 'black',
linewidth = 0.25) +
geom_vline(aes(xintercept = log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = .8) +
geom_vline(aes(xintercept = -log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = .8) +
theme_classic() +
scale_x_continuous(limits = c(-log10(3), log10(3)),
breaks = c(-0.4, -0.2, 0, 0.2, 0.4),
labels = c(-0.4, -0.2, 0, 0.2, 0.4)) +
scale_color_manual(values = c("#999999", "#E69F00")) +
facet_wrap(.~cluster, ncol = 5) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 8, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'),
strip.background = element_rect(fill = alpha('#91bfdb', 0.5)),
strip.text = element_text(size = 8, face = 'bold'),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, color = 'black'))
p10
pdf('cluster_peak_distribution2.pdf',
width = 8, height = 1.75)
p10
dev.off()
View(plot_data)
View(plot_data2)
View(plot_data)
View(peakAnno_tb)
# plot1
plot_data <- peakAnno_tb %>%
dplyr::select(`distanceToTSS (log10)`, cluster)
View(plot_data)
plot_data$cluster <- factor(plot_data$cluster, levels = paste0('C', 1:5))
p10 <- ggplot(plot_data,
aes(x = `distanceToTSS (log10)`)) +
geom_density(linewidth = 1) +
labs(x = 'log10((Distance To TSS/1000) + 1)',
y = 'Relative density') +
geom_vline(aes(xintercept = log10(1)),
linetype = 'dashed',
color = 'black',
linewidth = 0.25) +
geom_vline(aes(xintercept = log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = .8) +
geom_vline(aes(xintercept = -log10(1.5)),
linetype = 'dashed',
color = '#E69F00',
linewidth = .8) +
theme_classic() +
xlim(-2.3,2.3) +
scale_color_manual(values = c("#999999", "#E69F00")) +
facet_wrap(.~cluster, ncol = 5) +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text.x = element_text(size = 10, face = 'bold'),
axis.text.y = element_text(size = 10, face = 'bold'),
strip.background = element_rect(fill = alpha('#91bfdb', 0.5)),
strip.text = element_text(size = 8, face = 'bold'),
panel.grid = element_blank(),
panel.background = element_blank(),
panel.border = element_rect(fill = NA, color = 'black'))
p10
setwd(p_plot)
pdf('cluster_peak_distribution.pdf',
width = 8, height = 1.75)
p10
dev.off()
pdf('cluster_peak_distribution.pdf',
width = 10, height = 2)
p10
dev.off()
