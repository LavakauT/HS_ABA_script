# follow peak_intersect.sh to get the gain/loss/overlap peaks from each condition
# genotype between HS and CK
# gain and loss
p <- '/Users/user/Desktop/f1/narrowpeak/merge'
setwd(p)
all <- read.table('all_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition', into = c('genotype_treatment', 'end'), sep = '.peaks') %>%
dplyr::select(-end) %>%
separate(., col = 'genotype_treatment', into = c('genotype', 'treatment')) %>%
mutate(counts = as.numeric(counts),
type = 'all') %>%
mutate(`counts (K)` = counts/1000)
gain <- read.table('gain_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition',
into = c('type', 'genotype', 'treatment', 'vs', 'end'), sep = '_') %>%
dplyr::select(-vs, -end) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000)
loss <- read.table('loss_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition',
into = c('type', 'genotype', 'treatment', 'vs', 'end'), sep = '_') %>%
dplyr::select(-vs, -end) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000)
intersect <- read.table('intersect_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition',
into = c('type', 'genotype', 'treatment', 'vs', 'end'), sep = '_') %>%
dplyr::select(-vs, -end) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000)
# combine data
glt <- rbind(all %>%
dplyr::select(genotype, treatment, type, counts),
gain %>%
dplyr::select(genotype, treatment, type, counts),
loss %>%
dplyr::select(genotype, treatment, type, counts),
intersect %>%
dplyr::select(genotype, treatment, type, counts)) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000,
name = paste0(genotype, '(', treatment, '/CK', ')'))
glt[which(glt$type == 'loss'),]$`counts (K)` <- -glt[which(glt$type == 'loss'),]$`counts (K)`
glt
glt$genotype <- factor(glt$genotype, levels = c('Tak1', 'hsfa', 'hsfb', 'dko'))
glt$name <- factor(glt$name, levels = unique(glt[order(glt$genotype),]$name))
p3 <- ggplot(glt %>%
filter(type %in% c('gain', 'loss')),
aes(x = name,
y = `counts (K)`,
fill = type)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = counts),
vjust=0) +
scale_fill_manual(values = c('#fc8d59', '#91bfdb')) +
scale_y_continuous(limits = c(-10, 10)) +
labs(x = 'genotype (HS/CK)',
y = 'counts (K)',
fill = 'Type') +
coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'))
pdf(paste(p_plot, 'genotype_HS_CK_peak_gain_loss.pdf', sep = '/'),
width = 6, height = 2)
p3
dev.off()
View(p3)
View(glt)
View(all)
glt %>%
merge(., all %>%
select(-type, `counts (K)`) %>%
dplyr::rename(total_counts = counts))
glt %>%
merge(., all %>%
select(-treatment, -type, `counts (K)`) %>%
dplyr::rename(total_counts = counts))
all %>%
select(-treatment, -type, `counts (K)`)
all %>%
select(-type, -`counts (K)`)
all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts))
all %>%
select(-type, -`counts (K)`)
all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts)
glt %>%
merge(., all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts))
glt %>%
merge(., all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts)) %>%
mutate(ratio = round(counts/total_counts, 2))
glt <- glt %>%
merge(., all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts)) %>%
mutate(ratio = round(counts/total_counts, 2))
glt[which(glt$type == 'loss'),]$`counts (K)` <- -glt[which(glt$type == 'loss'),]$`counts (K)`
glt
glt$genotype <- factor(glt$genotype, levels = c('Tak1', 'hsfa', 'hsfb', 'dko'))
glt$name <- factor(glt$name, levels = unique(glt[order(glt$genotype),]$name))
View(glt)
glt$counts_ratio <- paste0(glt$counts, ' (', glt$ratio, ')')
p3 <- ggplot(glt %>%
filter(type %in% c('gain', 'loss')),
aes(x = name,
y = `counts (K)`,
fill = type)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = counts_ratio),
vjust=0) +
scale_fill_manual(values = c('#fc8d59', '#91bfdb')) +
scale_y_continuous(limits = c(-10, 10)) +
labs(x = 'genotype (HS/CK)',
y = 'counts (K)',
fill = 'Type') +
coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'))
p3
# combine data
glt <- rbind(all %>%
dplyr::select(genotype, treatment, type, counts),
gain %>%
dplyr::select(genotype, treatment, type, counts),
loss %>%
dplyr::select(genotype, treatment, type, counts),
intersect %>%
dplyr::select(genotype, treatment, type, counts)) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000,
name = paste0(genotype, '(', treatment, '/CK', ')'))
glt <- glt %>%
merge(., all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts)) %>%
mutate(ratio = round(counts/total_counts, 2))
glt[which(glt$type == 'loss'),]$`counts (K)` <- -glt[which(glt$type == 'loss'),]$`counts (K)`
glt
glt$genotype <- factor(glt$genotype, levels = c('Tak1', 'hsfa', 'hsfb', 'dko'))
glt$name <- factor(glt$name, levels = unique(glt[order(glt$genotype),]$name))
glt$counts_ratio <- paste0(glt$counts, ' (', glt$ratio, ')')
p3 <- ggplot(glt %>%
filter(type %in% c('gain', 'loss')),
aes(x = name,
y = `counts (K)`,
fill = type)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = counts_ratio),
vjust=0) +
scale_fill_manual(values = c('#fc8d59', '#91bfdb')) +
scale_y_continuous(limits = c(-10, 10)) +
labs(x = 'genotype (HS/CK)',
y = 'counts (K)',
fill = 'Type') +
coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'))
p3
pdf(paste(p_plot, 'genotype_HS_CK_peak_gain_loss.pdf', sep = '/'),
width = 6, height = 2)
p3
dev.off()
p_plot <- '/Users/user/Desktop/f1/plot'
pdf(paste(p_plot, 'genotype_HS_CK_peak_gain_loss.pdf', sep = '/'),
width = 6, height = 2)
p3
dev.off()
pdf(paste(p_plot, 'genotype_HS_CK_peak_gain_loss.pdf', sep = '/'),
width = 8, height = 2)
p3
dev.off()
pdf(paste(p_plot, 'genotype_HS_CK_peak_gain_loss.pdf', sep = '/'),
width = 10, height = 2)
p3
dev.off()
# different genotypes under CK
# gain and loss
p <- '/Users/user/Desktop/f1/narrowpeak/merge/CK'
setwd(p)
gain <- read.table('gain_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition', into = c('prefix', 'condition'), sep = 'merge/CK/') %>%
dplyr::select(-prefix) %>%
separate(., col = 'condition',
into = c('type', 'reference', 'vs', 'target','end'), sep = '_') %>%
dplyr::select(-vs, -end) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000)
loss <- read.table('loss_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition', into = c('prefix', 'condition'), sep = 'merge/CK/') %>%
dplyr::select(-prefix) %>%
separate(., col = 'condition',
into = c('type', 'reference', 'vs', 'target','end'), sep = '_') %>%
dplyr::select(-vs, -end) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000)
intersect <- read.table('intersect_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition', into = c('prefix', 'condition'), sep = 'merge/CK/') %>%
dplyr::select(-prefix) %>%
separate(., col = 'condition',
into = c('type', 'reference', 'vs', 'target','end'), sep = '_') %>%
dplyr::select(-vs, -end) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000)
# combine data
glt <- rbind(gain %>%
dplyr::select(reference, target, type, counts),
loss %>%
dplyr::select(reference, target, type, counts),
intersect %>%
dplyr::select(reference, target, type, counts)) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000,
name = paste0(target, '/', reference))
glt[which(glt$type == 'loss'),]$`counts (K)` <- -glt[which(glt$type == 'loss'),]$`counts (K)`
glt
glt$reference <- factor(glt$reference, levels = c('Tak1', 'hsfa', 'hsfb', 'dko'))
glt$name <- factor(glt$name, levels = unique(glt[order(glt$reference),]$name))
p4 <- ggplot(glt %>%
filter(type %in% c('gain', 'loss')),
aes(x = name,
y = `counts (K)`,
fill = type)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = counts),
vjust=0) +
scale_fill_manual(values = c('#fc8d59', '#91bfdb')) +
scale_y_continuous(limits = c(-15, 15)) +
labs(x = 'mutant/Tak1',
y = 'counts (K)',
fill = 'Type') +
coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'))
p4
# combine data
glt <- rbind(gain %>%
dplyr::select(reference, target, type, counts),
loss %>%
dplyr::select(reference, target, type, counts),
intersect %>%
dplyr::select(reference, target, type, counts)) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000,
name = paste0(target, '/', reference))
glt[which(glt$type == 'loss'),]$`counts (K)` <- -glt[which(glt$type == 'loss'),]$`counts (K)`
glt
glt$reference <- factor(glt$reference, levels = c('Tak1', 'hsfa', 'hsfb', 'dko'))
glt$name <- factor(glt$name, levels = unique(glt[order(glt$reference),]$name))
glt <- glt %>%
merge(., all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts)) %>%
mutate(ratio = round(counts/total_counts, 2))
# combine data
glt <- rbind(gain %>%
dplyr::select(reference, target, type, counts),
loss %>%
dplyr::select(reference, target, type, counts),
intersect %>%
dplyr::select(reference, target, type, counts)) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000,
name = paste0(target, '/', reference))
glt[which(glt$type == 'loss'),]$`counts (K)` <- -glt[which(glt$type == 'loss'),]$`counts (K)`
glt
glt$reference <- factor(glt$reference, levels = c('Tak1', 'hsfa', 'hsfb', 'dko'))
glt$name <- factor(glt$name, levels = unique(glt[order(glt$reference),]$name))
View(glt)
all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts)
all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts,
target = genotype) %>%
filter(target != 'Tak1',
treatment != 'HS')
glt %>%
merge(., all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts,
target = genotype) %>%
filter(target != 'Tak1',
treatment != 'HS') %>%
dplyr::select(-treatment))
glt %>%
merge(., all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts,
target = genotype) %>%
filter(target != 'Tak1',
treatment != 'HS') %>%
dplyr::select(-treatment)) %>%
mutate(ratio = round(counts/total_counts, 2))
glt <- glt %>%
merge(., all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts,
target = genotype) %>%
filter(target != 'Tak1',
treatment != 'HS') %>%
dplyr::select(-treatment)) %>%
mutate(ratio = round(counts/total_counts, 2))
p4 <- ggplot(glt %>%
filter(type %in% c('gain', 'loss')),
aes(x = name,
y = `counts (K)`,
fill = type)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = counts),
vjust=0) +
scale_fill_manual(values = c('#fc8d59', '#91bfdb')) +
scale_y_continuous(limits = c(-15, 15)) +
labs(x = 'mutant/Tak1',
y = 'counts (K)',
fill = 'Type') +
coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'))
p4
glt$counts_ratio <- paste0(glt$counts, ' (', glt$ratio, ')')
glt$counts_ratio <- paste0(glt$counts, ' (', glt$ratio, ')')
p4 <- ggplot(glt %>%
filter(type %in% c('gain', 'loss')),
aes(x = name,
y = `counts (K)`,
fill = type)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = counts_ratio),
vjust=0) +
scale_fill_manual(values = c('#fc8d59', '#91bfdb')) +
scale_y_continuous(limits = c(-15, 15)) +
labs(x = 'mutant/Tak1',
y = 'counts (K)',
fill = 'Type') +
coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'))
p4
pdf(paste(p_plot, 'mutant_Tak1_peak_gain_loss.pdf', sep = '/'),
width = 6, height = 2)
p4
dev.off()
pdf(paste(p_plot, 'mutant_Tak1_peak_gain_loss.pdf', sep = '/'),
width = 8, height = 2)
p4
dev.off()
# different genotypes under HS
# gain and loss
p <- '/Users/user/Desktop/f1/narrowpeak/merge/HS'
setwd(p)
gain <- read.table('gain_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition', into = c('prefix', 'condition'), sep = 'merge/HS/') %>%
dplyr::select(-prefix) %>%
separate(., col = 'condition',
into = c('type', 'reference', 'vs', 'target','end'), sep = '_') %>%
dplyr::select(-vs, -end) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000)
loss <- read.table('loss_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition', into = c('prefix', 'condition'), sep = 'merge/HS/') %>%
dplyr::select(-prefix) %>%
separate(., col = 'condition',
into = c('type', 'reference', 'vs', 'target','end'), sep = '_') %>%
dplyr::select(-vs, -end) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000)
intersect <- read.table('intersect_peaks.txt', header = F) %>%
dplyr::rename(counts = V1,
condition = V2) %>%
filter(condition != 'total') %>%
separate(., col = 'condition', into = c('prefix', 'condition'), sep = 'merge/HS/') %>%
dplyr::select(-prefix) %>%
separate(., col = 'condition',
into = c('type', 'reference', 'vs', 'target','end'), sep = '_') %>%
dplyr::select(-vs, -end) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000)
# combine data
glt <- rbind(gain %>%
dplyr::select(reference, target, type, counts),
loss %>%
dplyr::select(reference, target, type, counts),
intersect %>%
dplyr::select(reference, target, type, counts)) %>%
mutate(counts = as.numeric(counts)) %>%
mutate(`counts (K)` = counts/1000,
name = paste0(target, '/', reference))
glt[which(glt$type == 'loss'),]$`counts (K)` <- -glt[which(glt$type == 'loss'),]$`counts (K)`
glt
glt$reference <- factor(glt$reference, levels = c('Tak1', 'hsfa', 'hsfb', 'dko'))
glt$name <- factor(glt$name, levels = unique(glt[order(glt$reference),]$name))
glt <- glt %>%
merge(., all %>%
select(-type, -`counts (K)`) %>%
dplyr::rename(total_counts = counts,
target = genotype) %>%
filter(target != 'Tak1',
treatment != 'CK') %>%
dplyr::select(-treatment)) %>%
mutate(ratio = round(counts/total_counts, 2))
glt$counts_ratio <- paste0(glt$counts, ' (', glt$ratio, ')')
p5 <- ggplot(glt %>%
filter(type %in% c('gain', 'loss')),
aes(x = name,
y = `counts (K)`,
fill = type)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = counts_ratio),
vjust=0) +
scale_fill_manual(values = c('#fc8d59', '#91bfdb')) +
scale_y_continuous(limits = c(-15, 15)) +
labs(x = 'mutant/Tak1',
y = 'counts (K)',
fill = 'Type') +
coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'))
p5
pdf(paste(p_plot, 'mutant_Tak1_hs_peak_gain_loss.pdf', sep = '/'),
width = 10, height = 1.5)
p5
dev.off()
pdf(paste(p_plot, 'mutant_Tak1_hs_peak_gain_loss.pdf', sep = '/'),
width = 8, height = 1.5)
p5
dev.off()
p5 <- ggplot(glt %>%
filter(type %in% c('gain', 'loss')),
aes(x = name,
y = `counts (K)`,
fill = type)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = counts_ratio),
vjust=0,
size = 4) +
scale_fill_manual(values = c('#fc8d59', '#91bfdb')) +
scale_y_continuous(limits = c(-15, 15)) +
labs(x = 'mutant/Tak1',
y = 'counts (K)',
fill = 'Type') +
coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'))
pdf(paste(p_plot, 'mutant_Tak1_hs_peak_gain_loss.pdf', sep = '/'),
width = 6, height = 1.5)
p5
dev.off()
p5 <- ggplot(glt %>%
filter(type %in% c('gain', 'loss')),
aes(x = name,
y = `counts (K)`,
fill = type)) +
geom_bar(stat = 'identity') +
geom_text(aes(label = counts_ratio),
vjust=0,
size = 2) +
scale_fill_manual(values = c('#fc8d59', '#91bfdb')) +
scale_y_continuous(limits = c(-15, 15)) +
labs(x = 'mutant/Tak1',
y = 'counts (K)',
fill = 'Type') +
coord_flip() +
theme_classic() +
theme(axis.title = element_text(size = 12, face = 'bold'),
axis.text = element_text(size = 10, face = 'bold'))
pdf(paste(p_plot, 'mutant_Tak1_hs_peak_gain_loss.pdf', sep = '/'),
width = 6, height = 1.5)
p5
dev.off()
